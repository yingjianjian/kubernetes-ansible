- name: create kubernetes log dir
  file:
    path: "{{ KUBELOGDIR }}"
    state: directory

- name: scp apiserver controller-manager scheduler service to dest
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "kube-apiserver.service",dest: "/usr/lib/systemd/system/kube-apiserver.service" }
    - { src: "kube-controller-manager.service",dest: "/usr/lib/systemd/system/kube-controller-manager.service" }
    - { src: "kube-scheduler.service",dest: "/usr/lib/systemd/system/kube-scheduler.service" }
    - { src: "kubeconfig",dest: "{{ KUBERNETESPATH }}/kubeconfig" }

- name: reload service config
  shell: systemctl daemon-reload

- name: scp config template to master
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "apiserver.j2",dest: "{{ KUBERNETESPATH }}/apiserver" }
    - { src: "controller-manager.j2",dest: "{{ KUBERNETESPATH }}/controller-manager" }
    - { src: "scheduler.j2",dest: "{{ KUBERNETESPATH }}/scheduler" }


- name: scp master server to dest
  unarchive:
    src: kubernetes-server-linux-amd64.tar.gz
    dest: /tmp/
    copy: yes

- name: mv bin to /usr/bin
  shell: cp `ls|egrep -v "*.tar|*_tag"` /usr/bin/
  args:
   chdir: "/tmp/kubernetes/server/bin/"
   executable: /bin/bash



- name: restart apiserver 
  service:
    name: kube-apiserver
    state: restarted
    enabled: yes

- name: restart kube-controller-manager
  service:
    name: kube-controller-manager
    state: restarted
    enabled: yes

- name: restart kube-scheduler
  service:
    name: kube-scheduler
    state: restarted
    enabled: yes

- name: out admin kubeconfig
  shell: |
    CLUSTER_NAME="kubernetes"
    KUBE_USER="kubernetes-admin"
    KUBE_CERT="admin"
    KUBE_CONFIG="admin.kubeconfig"
  
    # 设置集群参数
    kubectl config set-cluster ${CLUSTER_NAME} \
        --certificate-authority=/etc/kubernetes/pki/ca.crt \
        --embed-certs=true \
        --server=https://{{VIP}}:8443 \
        --kubeconfig=/etc/kubernetes/${KUBE_CONFIG}
  
    # 设置客户端认证参数
    kubectl config set-credentials ${KUBE_USER} \
        --client-certificate=/etc/kubernetes/pki/${KUBE_CERT}.crt \
        --client-key=/etc/kubernetes/pki/${KUBE_CERT}.key \
        --embed-certs=true \
        --kubeconfig=/etc/kubernetes/${KUBE_CONFIG}
  
    # 设置上下文参数
    kubectl config set-context ${KUBE_USER}@${CLUSTER_NAME} \
        --cluster=${CLUSTER_NAME} \
        --user=${KUBE_USER} \
        --kubeconfig=/etc/kubernetes/${KUBE_CONFIG}
  
    # 设置当前使用的上下文
    kubectl config use-context ${KUBE_USER}@${CLUSTER_NAME} --kubeconfig=/etc/kubernetes/${KUBE_CONFIG}
  
    # 查看生成的配置文件
    kubectl config view --kubeconfig=/etc/kubernetes/${KUBE_CONFIG}
  args:
    chdir: "{{ KUBERNETESPATH }}"
    executable: /bin/bash
  when: cfsssl

- name: create kubernetes log dir
  file:
    path: "/root/.kube"
    state: directory

- name: scp admin kubeconfig
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0744
    force: yes
  with_items:
    - { src: "{{ KUBERNETESPATH }}/admin.kubeconfig", dest: "/root/.kube/config"  }
